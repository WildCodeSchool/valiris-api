swagger: "2.0"
info:
  description: "API exmple to manage apartments"
  version: "1.0.0"
  title: "Valiris API"
host: "localhost:3000"
basePath: "/"
consumes:
- "application/json"
produces:
- "application/json"
tags:
- name: "Apartment"
  description: "Operations on apartments"
paths:
  /apartments:
    get:
      tags:
      - "apartment"
      summary: "Get a list of apartments"
      description: ""
      responses:
        "200":
          description: "Everything went well"
          schema:
            type: 'object'
            properties:
              data:
                type: 'array'
                items: 
                  $ref: '#/definitions/ApartmentSimplified'
    post:
      tags:
      - "apartment"
      summary: "Add a new apartment"
      description: ""
      parameters:
      - in: "body"
        name: "apartment"
        description: "Apartment object that needs to be added in DB"
        required: true
        schema:
          allOf:
          - $ref: "#/definitions/ApartmentEditableAttributes"
          - type: 'object'
            required:
              - "email"
      responses:
        "201":
          description: "Created"
          schema:
            type: "object"
            properties:
              data:
                $ref: "#/definitions/Apartment"
        "400":
          description: "Invalid input. The apartment object provided is not valid"
          schema:
            type: 'object'
            properties:
              errorMessage:
                type: "string"
          
  /apartments/{apartmentId}:
    get:
      tags:
      - "apartment"
      summary: "Find an apartment by ID"
      description: "Returns a single apartment"
      parameters:
      - name: "apartmentId"
        in: "path"
        description: "ID of apartment to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: 'object'
            properties:
              data:
                type: "object"
                $ref: "#/definitions/Apartment"
        "404":
          description: "apartment not found"
    put:
      tags:
      - "apartment"
      summary: "Update an existing apartment"
      description: ""
      parameters:
      - name: "apartmentId"
        in: "path"
        description: "ID of apartment to return"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "apartment"
        description: "apartment object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/ApartmentEditableAttributes"
      responses:
        "200":
          description: "Updated"
          schema:
            type: "object"
            properties:
              data:
                $ref: "#/definitions/Apartment"
        "404":
          description: "apartment not found"
        "400":
          description: "Invalid input. The apartment object provided is not valid"
          schema:
            type: 'object'
            properties:
              errorMessage:
                type: "string"
    delete:
      tags:
      - "apartment"
      summary: "Deletes a apartment"
      description: ""
      parameters:
      - name: "apartmentId"
        in: "path"
        description: "apartment id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "404":
          description: "apartment not found"
        "200":
          description: "OK"
definitions:
  ApartmentEditableAttributes:
    type: "object"
    properties:
      name:
        type: "string"
        example: "John"
      week_price:
        type: "number"
        example: "10"
      month_price:
        type: "number"
        example: "10"
      details_fr: 
        type: "string"
        example: "Super appartement"
      details_en: 
        type: "string"
        example: "Great apartment"
      title_fr: 
        type: "string"
        example: "Super appartement"
      title_en: 
        type: "string"
        example: "Great apartment"
      main_picture_url: 
        type: "string"
        example: "/uploads/..."
      
  ApartmentSimplified:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "John"
      week_price:
        type: "number"
        example: "10"
      month_price:
        type: "number"
        example: "10"
      details_fr: 
        type: "string"
        example: "Super appartement"
      details_en: 
        type: "string"
        example: "Great apartment"
      title_fr: 
        type: "string"
        example: "Super appartement"
      title_en: 
        type: "string"
        example: "Great apartment"
      main_picture_url: 
        type: "string"
        example: "/uploads/..."
      
  Apartment:
    allOf: 
      - type: "object"
        properties:
          id:
            type: "integer"
            format: "int64"
      - $ref: '#/definitions/ApartmentEditableAttributes'
      